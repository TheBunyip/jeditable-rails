= jeditable-rails

A gem to add in-place-editable fields to your Rails project.  It is a wrapper for the Jeditable[http://www.appelsiini.net/projects/jeditable] jQuery plugin, so most options for <tt>.jeditable()</tt> can be passed through the <tt>options</tt> parameter of the helpers.

== Requirements

* jQuery[http://www.jquery.com] 1.2.6+ - see jquery-rails[http://github.com/indirect/jquery-rails] for easy integration with your Rails project
* Jeditable[http://www.appelsiini.net/projects/jeditable]

== Usage

Assuming a Rails 3 project, in your Gemfile, add:

  gem 'jeditable-rails'

Suppose you have a <tt>User</tt> model with a <tt>#zip_code</tt> attribute.

  # app/views/users/show.html.erb
  <h1>View/Edit your profile</h1>
  ...
  <b>Zip Code:</b>
  <%= editable_field @user, :zip_code %>

The field appears as normal text to the user, but when clicked, turns into a form field that will then be submitted back to the server.  By default, jeditable-rails requires an <tt>update</tt> action when a PUT is done to <tt>url_for(object)</tt>, which is <em>generated by default for Rails scaffolds</em>.

== Contributing to jeditable-rails
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Aidan Feldman. See LICENSE.txt for
further details.

